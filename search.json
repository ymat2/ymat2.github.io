[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "ビルドフレームワークの移行 (hugo -&gt; quarto) に伴い、 一時的にサイトのコンテンツを非公開にしています。\n\n\n松田 優樹 (MATSUDA Yuki)\n\n東北大学 大学院 生命科学研究科 分子化学生物学専攻 進化ゲノミクス分野 \n\nContacts\n\nyuki.matsuda.m10あっとgmail.com\n\n\nyuki.matsuda.r7あっとdc.tohoku.ac.jp\n\nLinks\n\n  ymat2 \n\n\n  0009-0006-2288-1621",
    "crumbs": [
      "HOME"
    ]
  },
  {
    "objectID": "bio/paml-tutorial.html",
    "href": "bio/paml-tutorial.html",
    "title": "PAML チュートリアル",
    "section": "",
    "text": "突貫で書いた即席のページです。\nPAML のテストデータを材料に codeml を一通り動かしてみる。\nPhylogenetic Analysis by Maximum Likelihood (PAML) は、DNA やタンパク質の配列を最尤法で系統解析するための 種々のプログラムを含むパッケージ。\n今回はその中で、コドンの配列から同義置換に対する非同義置換の速度である \\(\\omega = d_\\text{N} / d_\\text{S}\\) を推定して正の自然選択の検出を行う codeml を使う。",
    "crumbs": [
      "Bioinformatics",
      "PAML チュートリアル"
    ]
  },
  {
    "objectID": "bio/paml-tutorial.html#テストデータの準備",
    "href": "bio/paml-tutorial.html#テストデータの準備",
    "title": "PAML チュートリアル",
    "section": "テストデータの準備",
    "text": "テストデータの準備\nPAML の方で用意してある リゾチームの配列 を使う。んだけど、ファイルフォーマットが普段牧野研でよく使う形式と異なるので、 ひとまず↓をコピペして使ってください。\n\n\nlysozymeSmall.fa\n\n&gt;Hsa_Human\nAAGGTCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAGATTGGGAATGGATGGCTAC\nAGGGGAATCAGCCTAGCAAACTGGATGTGTTTGGCCAAATGGGAGAGTGGTTACAACACA\nCGAGCTACAAACTACAATGCTGGAGACAGAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCGCTACTGGTGTAATGATGGCAAAACCCCAGGAGCAGTTAATGCCTGTCATTTATCC\nTGCAGTGCTTTGCTGCAAGATAACATCGCTGATGCTGTAGCTTGTGCAAAGAGGGTTGTC\nCGTGATCCACAAGGCATTAGAGCATGGGTGGCATGGAGAAATCGTTGTCAAAACAGAGAT\nGTCCGTCAGTATGTTCAAGGTTGTGGAGTG\n\n&gt;Hla_gibbon\nAAGGTCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAGATTGGGAATGGATGGCTAC\nAGGGGAATCAGCCTAGCAAACTGGATGTGTTTGGCCAAATGGGAGAGTGGTTATAACACA\nCGAGCTACAAACTACAATCCTGGAGACAGAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCGCTACTGGTGTAATGATGGCAAAACCCCAGGAGCAGTTAATGCCTGTCATTTATCC\nTGCAATGCTTTGCTGCAAGATAACATCGCCGATGCTGTAGCTTGTGCAAAGAGGGTTGTC\nCGCGATCCACAAGGCATTAGAGCATGGGTGGCATGGAGAAATCGTTGTCAAAACAGAGAT\nCTCCGTCAGTATATTCAAGGTTGTGGAGTA\n\n&gt;Cgu/Can_colobus\nAAGATCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAAATTGGGACTGGATGGCTAC\nAAGGGAGTCAGCCTAGCAAACTGGGTGTGTTTGGCCAAATGGGAGAGTGGTTATAACACA\nGACGCTACAAACTACAATCCTGGAGATGAAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCGCTACTGGTGTAATAATGGCAAAACCCCAGGAGCAGTTAATGCCTGTCATATATCC\nTGCAATGCTTTGCTGCAAAATAACATCGCTGATGCTGTAGCTTGTGCAAAGAGGGTTGTC\nAGTGATCCACAAGGCATTCGAGCATGGGTGGCATGGAAAAAGCACTGTCAAAACAGAGAT\nGTCAGTCAGTATGTTGAAGGTTGTGGAGTA\n\n&gt;Pne_langur\nAAGATCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAAATTGGGACTGGATGGCTAC\nAAGGGAGTCAGCCTAGCAAACTGGGTGTGTTTGGCCAAATGGGAGAGTGGTTATAACACA\nGAAGCTACAAACTACAATCCTGGAGACGAAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCGCTACTGGTGTAATAATGGCAAAACCCCAGGAGCAGTTGATGCCTGTCATATATCC\nTGCAGTGCTTTGCTGCAAAACAACATCGCTGATGCTGTAGCTTGTGCAAAGAGGGTTGTC\nAGTGATCCACAAGGCGTTCGAGCATGGGTGGCATGGAGAAATCACTGTCAAAACAAAGAT\nGTCAGTCAGTACGTTAAAGGTTGTGGAGTG\n\n&gt;Mmu_rhesus\nAAGATCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAGATTGGGACTGGATGGCTAC\nAGGGGAATCAGCCTAGCAAACTGGGTGTGTTTGGCCAAATGGGAGAGTAATTATAACACA\nCAAGCTACAAACTACAATCCTGGAGACCAAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCACTACTGGTGTAATAATGGCAAAACCCCAGGAGCAGTTAATGCCTGTCATATATCC\nTGCAATGCTTTGCTGCAAGATAACATCGCTGATGCTGTAACTTGTGCAAAGAGGGTTGTC\nAGTGATCCACAAGGCATTAGAGCATGGGTGGCATGGAGAAATCACTGTCAAAACAGAGAT\nGTCAGTCAGTATGTTCAAGGTTGTGGAGTG\n\n&gt;Ssc_squirrelM\nAAGGTCTTCGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAGGCTTGGAATGGATGGCTAC\nAGGGGAATCAGCCTAGCAAACTGGATGTGTTTGGCCAAATGGGAGAGTGACTATAACACA\nCGTGCTACAAACTACAATCCTGGAGACCAAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCACTATTGGTGTAATAATGGCAGAACCCCAGGAGCAGTTAATGCCTGTCATATATCC\nTGCAATGCTTTGCTGCAAGATGACATCACTCAAGCTGTGGCCTGTGCAAAGAGGGTTGTC\nCGTGATCCACAAGGCATTAGAGCATGGGTGGCATGGAAAGCTCATTGTCAAAACAGAGAT\nGTCAGTCAGTATGTTCAAGGTTGTGGAGTA\n\n&gt;Cja_marmoset\nAAGGTCTTTGAAAGGTGTGAGTTGGCCAGAACTCTGAAAAGGTTTGGACTGGATGGCTAC\nAGGGGAATCAGCCTAGCAAACTGGATGTGTTTGGCCAAATGGGAGAGTGATTATAACACA\nCGTGCTACAAACTACAATCCTGGAGACCAAAGCACTGATTATGGGATATTTCAGATCAAT\nAGCCACTATTGGTGTAACAATGGCAGAACCCCAGGAGCAGTTAATGCCTGTCATATATCC\nTGCAATGCTTTGCTGCAAGATGACATCACTGAAGCTGTGGCCTGTGCAAAGAGGGTTGTC\nCGCGATCCACAAGGCATTAGGGCATGGGTGGCATGGAAAGCTCATTGTCAAAACAGAGAT\nGTCAGTCAGTATGTTCAAGGTTGTGGAGTA\n\n\n\nlysozymeSmall.fa.treefile\n\n(Hsa_Human:0.0087447996,Hla_gibbon:0.0130303081,(((Cgu/Can_colobus:0.0156654142,Pne_langur:0.0181835564):0.0280807319,Mmu_rhesus:0.0070703774):0.0147707727,(Ssc_squirrelM:0.0140657314,Cja_marmoset:0.0076397044):0.0477319527):0.0256856586);\n\n系統樹ファイルは IQ-TREE を使って推定したもの。 手元でやってもらってもいいです。\niqtree2 --version\n# IQ-TREE multicore version 2.0.7 for Linux 64-bit built Jan 21 2022\n# Developed by Bui Quang Minh, Nguyen Lam Tung, Olga Chernomor,\n# Heiko Schmidt, Dominik Schrempf, Michael Woodhams.\n\niqtree2 -s lysozymeSmall.fa -m TEST\n\n\n\n\n\n\n\n\n\n\n\n\n\n生物学的な背景\n葉を常食とする旧世界ザル (左図) で、 反芻動物に似た前胃での発酵をともなう消化を獲得\n前胃に分泌されるリゾチームが進化\nMessier and Stewart 1997",
    "crumbs": [
      "Bioinformatics",
      "PAML チュートリアル"
    ]
  },
  {
    "objectID": "bio/paml-tutorial.html#素の-paml-を動かす",
    "href": "bio/paml-tutorial.html#素の-paml-を動かす",
    "title": "PAML チュートリアル",
    "section": "素の PAML を動かす",
    "text": "素の PAML を動かす\n\nPAML website\nPAML github リポジトリ\n井上潤さんのホームページ\nPAML Beginner’s Guide\n\n\nPAML をインストールする\nいずれかのパッケージ管理ツールを介するのが楽。\nHomebrew を使う場合 brewsci/bio/ リポジトリのため、 M2 チップ以降の Mac には対応していない可能性がある。 遺伝研では apptainer (singularity) を使わなくてもすでに PAML の環境が整っている。 (c.f. which -a codeml)\n## Homebrew を使う (Mac, M2 チップ以上だと無理かも)\nbrew install brewsci/bio/paml\n\n## apt を使う (Ubuntu)\nsudo apt install paml\n\n## conda を介したインストール (共通)\nconda install -c bioconda paml\n\n## apptainer のやつを使う (遺伝研)\nls /usr/local/biotools/p/paml*\nこれらのいずれの方法も使えないときは、 ソースコードを ダウンロードして手元でビルドする。 方法は公式サイトに記載がある。\n\n\n.ctl ファイルの概要\ncodeml を動かすとき、ファイルの指定や種々のオプションの指定は、 すべてコントロールファイル (.ctl) に記述する。 見た目はこんな感じ:\n\n\nlysozymeSmall.ctl\n\n      seqfile = lysozymeSmall.fa\n     treefile = lysozymeSmall.fa.treefile\n      outfile = your_output_file\n\n        noisy = 9   * 0,1,2,3,9: how much rubbish on the screen\n      verbose = 1   * 1: detailed output, 0: concise output\n      runmode = 0   * 0: user tree;  1: semi-automatic;  2: automatic\n                    * 3: StepwiseAddition; (4,5):PerturbationNNI\n\n      seqtype = 1   * 1:codons; 2:AAs; 3:codons--&gt;AAs\n    CodonFreq = 2   * 0:1/61 each, 1:F1X4, 2:F3X4, 3:codon table\n        clock = 0   * 0: no clock, unrooted tree, 1: clock, rooted tree\n        model = 2\n                    * models for codons:\n                        * 0:one, 1:b, 2:2 or more dN/dS ratios for branches\n\n      NSsites = 0   * dN/dS among sites. 0:no variation, 1:neutral, 2:positive\n        icode = 0   * 0:standard genetic code; 1:mammalian mt; 2-10:see below\n\n    fix_kappa = 0   * 1: kappa fixed, 0: kappa to be estimated\n        kappa = 2   * initial or fixed kappa\n    fix_omega = 0   * 1: omega or omega_1 fixed, 0: estimate\n        omega = 2   * initial or fixed omega, for codons or codon-transltd AAs\n\n    fix_alpha = 1   * 0: estimate gamma shape parameter; 1: fix it at alpha\n        alpha = .0  * initial or fixed alpha, 0:infinity (constant rate)\n       Malpha = 0   * different alphas for genes\n        ncatG = 4   * # of categories in the dG or AdG models of rates\n\n        getSE = 0   * 0: don't want them, 1: want S.E.s of estimates\n RateAncestor = 0   * (1/0): rates (alpha&gt;0) or ancestral states (alpha=0)\n       method = 0   * 0: simultaneous; 1: one branch at a time\n  fix_blength = 0  * 0: ignore, -1: random, 1: initial, 2: fixed, 3: proportional\n\n\n* Specifications for duplicating results for the small data set in table 1\n* of Yang (1998 MBE 15:568-573).\n* see the tree file lysozyme.trees for specification of node (branch) labels\n\nどの解析でも共通で変更するのは seqfile, treefile, outfile の3つ。 model, NSsites, fix_omega, omega は解析に応じて変更する。\n\nseqfile\n\nDNAまたはタンパク質の配列のファイルパス。\n\ntreefile\n\n系統樹のファイルパス。tip名は seqfile のものと一致している必要がある。\n\noutfile\n\n出力ファイルのパス。\n\nmodel\n\n系統樹の各 branch における \\(\\omega = d_\\text{N} / d_\\text{S}\\) の設定。\n\n\n0: 系統樹全体で均一の \\(\\omega = d_\\text{N} / d_\\text{S}\\) を推定。\n\n\n1: branch ごとに異なる \\(\\omega = d_\\text{N} / d_\\text{S}\\) を推定。\n\n\n2: treefile の branch に #, #1 などの記号を振って各記号の branch で異なる \\(\\omega = d_\\text{N} / d_\\text{S}\\) を推定。\n\nNSsites\n\nコドン/アミノ酸サイトごとの \\(\\omega = d_\\text{N} / d_\\text{S}\\) の設定。\n\n\n0: サイト間で \\(\\omega = d_\\text{N} / d_\\text{S}\\) が同じと仮定。branchモデルの時はこれ。\n\n\n1: Neutral\n\n\n2: Positive\n\nfix_omega\n\n\\(\\omega = d_\\text{N} / d_\\text{S}\\) を固定するかどうか。\n\n\n0: 初期値から最尤推定する。\n\n\n1: 初期値で固定する。\n\nomega\n\n\\(\\omega = d_\\text{N} / d_\\text{S}\\) の初期値。\n\n\n\n\nおおまかな流れ\n検証したいシナリオ (特定の枝で正の自然選択がある、等) を対立仮説、 そうでないと仮定するシナリオを帰無仮説としてそれぞれ .ctl を書いて codeml を動かす。\nそれぞれの仮説のパラメータ数と対数尤度が得られるので、 尤度比検定を用いて帰無仮説を棄却することで対立仮説を採択する。\nよく使われる対立仮説と帰無仮説の組み合わせは以下の表のとおり:\n\n\n\n対立仮説\n帰無仮説\n検定すること\n引用\n\n\n\n\nM2\nM1\n特定サイトにおける正の自然選択\nYang 2000\n\n\nM3\nM0\nサイト間で \\(d_\\text{N} / d_\\text{S}\\) が異なるか\n〃\n\n\nM8\nM7\n特定サイトにおける正の自然選択\nYang 2000\n\n\nM8\nM8a\n特定サイトにおける選択の緩和\n〃\n\n\nbsA\nbsA1\n特定の枝の特定のサイトにおける正の自然選択\nZhang 2005\n\n\nbsA\nM1\n特定の枝の特定のサイトにおける選択の緩和\nZhang 2005\n\n\nbsC\nM1\n特定のクレードの特定のサイトで \\(d_\\text{N} / d_\\text{S}\\) が異なるか\nYang 2002\n\n\nbsD\nM3\n特定のクレードの特定のサイトで \\(d_\\text{N} / d_\\text{S}\\) が異なるか\nYang 2002, Bielawski 2004\n\n\nb_free\nb_neut\n特定の枝で \\(d_\\text{N} / d_\\text{S}\\) が1と異なるか\nYang 2002\n\n\nb_free\nM0\n特定の枝で \\(d_\\text{N} / d_\\text{S}\\) が他と異なるか\nYang 2002\n\n\n\n\n\nSite モデル\n🚧 工事中 🚧\n\n\nBranch モデル\n旧世界ザルの共通祖先の枝を対象に、 正の自然選択 (\\(d_\\text{N} / d_\\text{S} &gt; 0\\)) を検出する。\nまず対立仮説として、注目する枝で \\(d_\\text{N} / d_\\text{S}\\) が異なると仮定して codeml を動かす。\n系統樹 (lysozymeSmall.fa.treefile) をエディタで編集して、 注目する枝 (i.e. \\(d_\\text{N} / d_\\text{S} &gt; 0\\) を想定する枝) に #1 を振る:\n\n\n(Hsa_Human:0.0087447996,Hla_gibbon:0.0130303081,(((Cgu/Can_colobus:0.0156654142,Pne_langur:0.0181835564)#1:0.0280807319,Mmu_rhesus:0.0070703774):0.0147707727,(Ssc_squirrelM:0.0140657314,Cja_marmoset:0.0076397044):0.0477319527):0.0256856586);\n\n\n\n\n\n\n\n\n\n\n\n\n#1 を振った枝とその他の枝で \\(d_\\text{N} / d_\\text{S}\\) が異なる、 というシナリオの .ctl を書く:\n\n\nb_free.ctl\n\n   outfile = branch_alt  * 何でもいいけど branch モデルの対立仮説と分かるように\n     model = 2           * 記号の有無で異なる ω を推定\n   NSsites = 0           * サイト間では ω は一定\n fix_omega = 0           * ω の値を配列から推定\n     omega = 1           * 推定は ω=1 からスタート\n\n* 他のパラメータは変更なし\n\nこの .ctl を指定して codeml を実行:\ncodeml b_free.ctl\n指定した出力ファイル branch_alt を見てみる。 まずは最後の方に書かれている各枝の \\(\\omega\\) の値:\ntail branch_alt\ndS tree:\n(Hsa_Human: 0.011030, Hla_gibbon: 0.016794, (((Cgu/Can_colobus: 0.018929, Pne_langur: 0.022497): 0.009367, Mmu_rhesus: 0.008406): 0.018929, (Ssc_squirrelM: 0.017701, Cja_marmoset: 0.010258): 0.052331): 0.030198);\ndN tree:\n(Hsa_Human: 0.007565, Hla_gibbon: 0.011517, (((Cgu/Can_colobus: 0.012981, Pne_langur: 0.015429): 0.032838, Mmu_rhesus: 0.005765): 0.012982, (Ssc_squirrelM: 0.012140, Cja_marmoset: 0.007035): 0.035889): 0.020710);\n\nw ratios as labels for TreeView:\n(Hsa_Human #0.68581 , Hla_gibbon #0.68581 , (((Cgu/Can_colobus #0.68581 , Pne_langur #0.68581 ) #3.50573 , Mmu_rhesus #0.68581 ) #0.68581 , (Ssc_squirrelM #0.68581 , Cja_marmoset #0.68581 ) #0.68581 ) #0.68581 );\n\n\nTime used:  0:01\n期待通り、#1 を振った枝とそれ以外の枝で異なる \\(\\omega\\) が計算されている。 (旧世界ザルの共通祖先で \\(\\omega = 3.50573\\), そのほかの枝で \\(\\omega = 0.68581\\))\nもう一か所は、パラメータ数と対数尤度が記述された行:\ngrep \"lnL\" branch_alt\nlnL(ntime: 11  np: 14):   -904.636553      +0.000000\nパラメータ数が14、対数尤度が -904.636553 であることを示している。\n\n次に、帰無仮説として指定した枝の \\(\\omega\\) を1で固定したモデルの 当てはまりを計算する。\n.ctl の以下のパラメータを変更する:\n\n\nb_neut.ctl\n\n   outfile = branch_null  * 何でもいいけど branch モデルの帰無仮説と分かるように\n fix_omega = 1            * ω の値を固定\n     omega = 1            * ω=1\n\n* 他のパラメータは変更なし\n\nこの .ctl を指定して codeml を実行:\ncodeml b_neut.ctl\n同様に出力ファイル branch_null を見てみる。 各枝の \\(\\omega\\) の値は:\nw ratios as labels for TreeView:\n(Hsa_Human #0.685577 , Hla_gibbon #0.685577 , (((Cgu/Can_colobus #0.685577 , Pne_langur #0.685577 ) #1 , Mmu_rhesus #0.685577 ) #0.685577 , (Ssc_squirrelM #0.685577 , Cja_marmoset #0.685577 ) #0.685577 ) #0.685577 );\nパラメータ数と対数尤度は:\n$ grep \"lnL\" branch_null\nlnL(ntime: 11  np: 13):   -905.484183      +0.000000\nまとめると次のようになった:\n\n\n\n仮説\n注目する枝の \\(\\omega\\)\nパラメータ数\n対数尤度\n\n\n\n\n対立仮説\n3.50573\n14\n-904.636553\n\n\n帰無仮説\n1\n13\n-905.484183\n\n\n\n\n最後に尤度比検定を行って、 「注目する枝の \\(\\omega\\) が他の枝より高いようだけど、 これは選択の緩和 (\\(\\omega=1\\)) じゃなくて 正の自然選択　(\\(\\omega&gt;1\\)) だ。」 ということを統計的に主張できるかどうか確かめる。\n尤度比検定の方法はいくつかあるけど、R とか Python 使うのがいいんじゃないだろうか。 (エクセルとかでもできるらしい。)\nPython の尤度比検定の関数を使って検定する:\n\n\nlrp.py\n\nfrom scipy.stats import chi2\n\nalt_lnL = -904.636553   # 対立仮説の対数尤度\nnull_lnL = -905.484183  # 帰無の対数尤度\nlr_stat = 2 * (alt_lnL - null_lnL)\n\nalt_np = 14    # 対立仮説のパラメータ数\nnull_np = 13   # 帰無仮説のパラメータ数\ndf = alt_np - null_np\n\np_val = chi2.sf(lr_stat, df)\nprint(p_val)\n\n$ python3 lrt.py\n0.19290903422911437\n結果、尤度比検定の p-value は 0.1929 &gt; 0.05 となった。 これを解釈すると、帰無仮説を棄却することができない = 正の自然選択とは主張できないとなる。\n\n\nBranch-Site モデル\nSite モデルや Branch モデルは枝全体やサイト全体で \\(\\omega\\) を平均するため、 時に検出力が弱くなる。\nつまり、ある枝で特定のサイトに正の自然選択が本当に働いていたとしても、 他のサイトや枝の \\(\\omega\\) が小さければそれに引っ張られて \\(\\omega &gt; 1\\) を検出できない。\nそこで、Branch-Site モデルは特定の枝の特定のサイトに働いた自然選択を検出する。\n使う系統樹は Branch モデルと同じ。\nまず対立仮説として、#1 を振った枝で \\(\\omega &gt; 1\\) のサイトがある、 というシナリオの .ctl を書く:\n\n\nbsA.ctl\n\n   outfile = bs_alt   * 何でもいいけど branch-site モデルの対立仮説と分かるように\n     model = 2        * 記号の有無で異なる ω を推定\n   NSsites = 2        * ω &gt; 1 のサイトを仮定\n fix_omega = 0        * ω の値を配列から推定\n     omega = 1        * 推定は ω=1 からスタート\n\n* 他のパラメータは変更なし\n\nこの .ctl を指定して codeml を実行:\ncodeml bsA.ctl\n出力ファイル bs_alt を見てみる。 以下のような記述があるはず:\nMLEs of dN/dS (w) for site classes (K=4)\n\nsite class             0        1       2a       2b\nproportion       0.29433  0.35964  0.15574  0.19029\nbackground w     0.00000  1.00000  0.00000  1.00000\nforeground w     0.00000  1.00000  5.78754  5.78754\n各サイトクラスは次のように解釈する:\n\nsite class 0\n\n#1 を振った枝もそれ以外も \\(\\omega &lt; 1\\) であるサイト\n\n\n今回は全サイトのうち約29%がこれにあたり、\\(\\omega = 0\\) の強い純化選択をうけている。\n\nsite class 1\n\n#1 を振った枝もそれ以外も \\(\\omega = 1\\) であるサイト\n\n\n今回は全サイトのうち約36%がこれにあたる。\n\nsite class 2a\n\n#1 を振った枝で \\(\\omega &gt; 1\\)、 それ以外で \\(\\omega &lt; 1\\) であるサイト\n\n\n今回は全サイトのうち約16%がこれにあたり、#1 の枝では \\(\\omega = 5.78754\\) の強い正の自然選択が働いている。\n\nsite class 2b\n\n#1 を振った枝で \\(\\omega &gt; 1\\)、 それ以外で \\(\\omega = 1\\) であるサイト\n\n\n今回は全サイトのうち約19%がこれにあたる。\n\n\n次は Branch モデルと同じく、パラメータ数と対数尤度が記述された行:\n$ grep \"lnL\" bs_alt\nlnL(ntime: 11  np: 16):   -901.562791      +0.000000\nさらに、Branch-Site モデルではどのサイトが正の自然選択を受けているかを示す記述がある:\nBayes Empirical Bayes (BEB) analysis (Yang, Wong & Nielsen 2005. Mol. Biol. Evol. 22:1107-1118)\nPositive sites for foreground lineages Prob(w&gt;1):\n    14 R 0.795\n    21 R 0.798\n    23 I 0.799\n    37 G 0.585\n    41 R 0.713\n    50 R 0.707\n    62 R 0.583\n    87 D 0.796\n   126 Q 0.699\nBEB法 (Bayes empirical Bayes法) により求められた、 そのサイトがω&gt;1で正の選択下にある事後確率を示す。 この事後確率が0.95や0.99を超えていた場合に正の自然選択が働いたサイトとする論文をよく見る。\n今回はそういうサイトはなさそう。\n\n次に、帰無仮説として指定した枝のサイトの \\(\\omega\\) を1で固定したモデルの 当てはまりを計算する。\n.ctl のパラメータを変更する:\n\n\nbsA1.ctl\n\n   outfile = bs_null  * 何でもいいけど branch-site モデルの帰無仮説と分かるように\n fix_omega = 1        * ω の値を固定\n     omega = 1        * ω=1\n\n* 他のパラメータは変更なし\n\nこの .ctl を指定して codeml を実行:\ncodeml bsA1.ctl\n同様に出力ファイル bs_null を見てみる。 サイトクラスを見ると #1 の枝の \\(\\omega\\) が1になっている:\nMLEs of dN/dS (w) for site classes (K=4)\n\nsite class             0        1       2a       2b\nproportion       0.26177  0.32442  0.18479  0.22902\nbackground w     0.00000  1.00000  0.00000  1.00000\nforeground w     0.00000  1.00000  1.00000  1.00000\nパラメータ数と対数尤度は:\n$ grep \"lnL\" bs_null\nlnL(ntime: 11  np: 15):   -902.301501      +0.000000\n\n最後に、同じく尤度比検定を行って、対立仮説が採択されるか確かめる:\n\n\nlrp.py\n\nfrom scipy.stats import chi2\n\nalt_lnL = -901.562791   # 対立仮説の対数尤度\nnull_lnL = -902.301501  # 帰無の対数尤度\nlr_stat = 2 * (alt_lnL - null_lnL)\n\nalt_np = 16    # 対立仮説のパラメータ数\nnull_np = 15   # 帰無仮説のパラメータ数\ndf = alt_np - null_np\n\np_val = chi2.sf(lr_stat, df)\nprint(p_val)\n\n$ python3 lrt.py\n0.22417862391381319\n結果、尤度比検定の p-value は 0.2242 &gt; 0.05 となった。 Branch-Site モデルでも、 帰無仮説を棄却することができない = 正の自然選択とは主張できない となった。",
    "crumbs": [
      "Bioinformatics",
      "PAML チュートリアル"
    ]
  },
  {
    "objectID": "bio/paml-tutorial.html#ete-を使って-paml-を動かす",
    "href": "bio/paml-tutorial.html#ete-を使って-paml-を動かす",
    "title": "PAML チュートリアル",
    "section": "ete を使って PAML を動かす",
    "text": "ete を使って PAML を動かす\n🚧 工事中 🚧",
    "crumbs": [
      "Bioinformatics",
      "PAML チュートリアル"
    ]
  }
]